version: 2.1

# ## Workflows
#
# ### Contiunous Ruby Update
#
# 1. Check the newest Ruby (scheduled)
# 1. If a new Ruby found, create a new Pull Request
#     - Created branch is named `ruby-{major}.{minor}.{patch}`
#     - After git push, CircleCI trigger default workflow
#
# ### Default workflow
#
# NOTE: Start workflow only if branch name matches `master` or `ruby-*`.
#
# 1. Build Ruby RPM
# 1. Test Ruby RPM
# 1. Deploy Ruby RPM if the branch is `master`
#
# ## ENV (CircleCI)
#
# | Name                    | Description                              | Example                                              |
# | ----------------------- | ---------------------------------------- | ---------------------------------------------------- |
# | `GITHUB_TOKEN`          | GitHub API Token to use to create PR.    | "<Secret>"                                           |
# | `GIT_CONFIG_USER_EMAIL` | Email address to use git commit message. | "technical_staff@feedforce.jp"                       |
# | `GIT_CONFIG_USER_NAME`  | User name to use git commit message.     | "feedforce tech team"                                |
# | `CHANGELOG_AUTHOR`      | Author to write SPEC changelog.          | "feedforce tech team <technical_staff@feedforce.jp>" |
#
# ## Usage
#
# ### To add a new Ruby version
#
# 1. Add a new SPEC file as `ruby-{major}.{minor}.spec` to repository
# 1. Add jobs of a new Ruby version to workflows in `.circleci/config.yml`
#

executors:
  amd64:
    machine:
      image: ubuntu-2004:202104-01
    environment:
      DOCKER_BUILDKIT: 1

  arm64:
    machine:
      image: ubuntu-2004:202104-01
    environment:
      DOCKER_BUILDKIT: 1
    resource_class: arm.medium

jobs:
  build_and_test:
    parameters:
      version:
        description: Ruby version (e.g. 2.5)
        type: enum
        enum:
          - "2.6"
          - "2.7"
          - "3.0"
          - "3.1"
      arch:
        type: enum
        enum:
          - "amd64"
          - "arm64"
    executor: << parameters.arch >>
    working_directory: ~/ruby-rpm
    steps:
      - checkout
      - run:
          name: "Build Docker image for Ruby RPM << parameters.version >>"
          command: |
            docker build \
              -t feedforce/ruby-rpm:<< parameters.version >>-builder \
              -f Dockerfile-7 \
              --target builder \
              --cache-from=feedforce/ruby-rpm:centos7 \
              --build-arg RUBY_X_Y_VERSION=<< parameters.version >> \
              --progress plain \
              .
      - run:
          name: "Extract RPM file from Docker container"
          command: |
            CONTAINER_ID=$(docker create feedforce/ruby-rpm:<< parameters.version >>-builder)
            docker cp ${CONTAINER_ID}:/tmp/ruby-<< parameters.version >>-rpm/ /tmp/
      - store_artifacts:
          path: "/tmp/ruby-<< parameters.version >>-rpm"
          destination: "ruby-<< parameters.version >>-rpm"
      - run:
          name: "Build Docker image to install Ruby RPM << parameters.version >>"
          command: |
            docker build \
              -t feedforce/ruby-rpm:<< parameters.version >>-tester \
              -f Dockerfile-7 \
              --target tester \
              --cache-from=feedforce/ruby-rpm:<< parameters.version >>-builder \
              --build-arg RUBY_X_Y_VERSION=<< parameters.version >> \
              --progress plain \
              .
      - run:
          name: "Run Ruby << parameters.version >>"
          command: |
            docker run -it feedforce/ruby-rpm:<< parameters.version >>-tester \
              ruby -v -e 'puts File.read("/etc/centos-release")'
      - run:
          name: "Uninstall Ruby RPM << parameters.version >>"
          command: |
            docker run -it feedforce/ruby-rpm:<< parameters.version >>-tester \
              yum remove -y ruby
      # Avoid "Concurrent upstream jobs persisted the same file(s)" error in attach_workspace
      # see https://app.circleci.com/pipelines/github/feedforce/ruby-rpm/10839/workflows/830b00e7-ebb9-49c4-b363-805085c2a47b/jobs/23143
      - when:
          condition:
            equal: [ << parameters.arch >>, arm64 ]
          steps:
            - run:
                name: "Delete SRPM file only arm64"
                command: |
                  rm /tmp/ruby-<< parameters.version >>-rpm/ruby-*.el7.src.rpm
      - persist_to_workspace:
          root: "/tmp/ruby-<< parameters.version >>-rpm"
          paths:
            - ./*

  deploy:
    parameters:
      version:
        description: Ruby version (e.g. 2.5)
        type: enum
        enum:
          - "2.6"
          - "2.7"
          - "3.0"
          - "3.1"
    docker:
      - image: cimg/base:stable
        environment:
          CIRCLE_ARTIFACTS: "/tmp/ruby-<< parameters.version >>-rpm"
    working_directory: ~/ruby-rpm
    steps:
      - checkout
      - attach_workspace:
          at: "/tmp/ruby-<< parameters.version >>-rpm"
      - run:
          name: "List Ruby RPM files"
          command: ls -l /tmp/ruby-<< parameters.version >>-rpm/
      # Workaround to keep backward compatibility for RPM file name
      # see https://github.com/feedforce/ruby-rpm/pull/63
      - run:
          name: "Rename Ruby RPM files"
          command: |
            for f in /tmp/ruby-<< parameters.version >>-rpm/*.el7.*.rpm; do
              mv "${f}" $(echo "${f}" | sed "s/\.el7\./\.el7\.centos\./")
            done
      - run:
          name: "List Ruby RPM files"
          command: ls -l /tmp/ruby-<< parameters.version >>-rpm/
      - deploy:
          name: "Deploy Ruby RPM << parameters.version >>"
          command: "./.circleci/github-release.sh << parameters.version >>"

  update:
    docker:
      - image: cimg/base:stable
    working_directory: ~/ruby-rpm
    steps:
      - checkout
      - run:
          name: Update SPEC files
          command: ./.circleci/update-spec.sh

workflows:
  version: 2
  default:
    jobs:
      - build_and_test:
          name: ruby-<< matrix.version >>-centos7-<< matrix.arch >>-build-and-test
          matrix:
            parameters:
              version: ["2.6", "2.7", "3.0", "3.1"]
              arch: ["amd64", "arm64"]
      - deploy:
          name: ruby-<< matrix.version >>-deploy
          matrix:
            parameters:
              version: ["2.6", "2.7", "3.0", "3.1"]
          requires:
            - ruby-<< matrix.version >>-centos7-amd64-build-and-test
            - ruby-<< matrix.version >>-centos7-arm64-build-and-test
          filters:
            branches:
              only:
                - master

  continuous_update:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update
